diff -ur a/Telegram/SourceFiles/data/components/sponsored_messages.cpp b/Telegram/SourceFiles/data/components/sponsored_messages.cpp
--- a/Telegram/SourceFiles/data/components/sponsored_messages.cpp	1970-01-01 01:00:01
+++ b/Telegram/SourceFiles/data/components/sponsored_messages.cpp	2024-10-07 21:25:44
@@ -183,11 +183,11 @@
 			entryIt->sponsored.textWithEntities,
 			(*lastViewIt)->data());
 		entryIt->item.reset(makedMessage.get());
-		history->addNewInTheMiddle(
-			makedMessage.get(),
-			std::distance(begin(history->blocks), blockIt),
-			std::distance(begin(messages()), lastViewIt) + 1);
-		messages().back().get()->setPendingResize();
+		// history->addNewInTheMiddle(
+		// 	makedMessage.get(),
+		// 	std::distance(begin(history->blocks), blockIt),
+		// 	std::distance(begin(messages()), lastViewIt) + 1);
+		// messages().back().get()->setPendingResize();
 		list.injectedCount++;
 	}
 }
diff -ur a/Telegram/SourceFiles/dialogs/dialogs_widget.cpp b/Telegram/SourceFiles/dialogs/dialogs_widget.cpp
--- a/Telegram/SourceFiles/dialogs/dialogs_widget.cpp	1970-01-01 01:00:01
+++ b/Telegram/SourceFiles/dialogs/dialogs_widget.cpp	2024-10-07 22:10:39
@@ -1881,7 +1881,12 @@
 		} else if (controller()->isPrimary()) {
 			const auto filters = &session().data().chatsFilters();
 			const auto &list = filters->list();
-			const auto first = list.empty() ? FilterId() : list.front().id();
+			auto first = FilterId();
+            if (list.size() == 1) {
+                first = list.front().id();
+            } else if (list.size() > 1) {
+                first = list[1].id();
+            };
 			if (controller()->activeChatsFilterCurrent() != first) {
 				controller()->setActiveChatsFilter(first);
 			}
diff -ur a/Telegram/SourceFiles/window/window_filters_menu.cpp b/Telegram/SourceFiles/window/window_filters_menu.cpp
--- a/Telegram/SourceFiles/window/window_filters_menu.cpp	1970-01-01 01:00:01
+++ b/Telegram/SourceFiles/window/window_filters_menu.cpp	2024-10-08 17:02:41
@@ -234,6 +234,15 @@
 		now.emplace(filter.id(), std::move(button));
 	}
 	_filters = std::move(now);
+    FilterId filter;
+    if (filters->list().size() == 0) {
+        filter = FilterId();
+    } else if (filters->list().size() == 1) {
+        filter = filters->list()[0].id();
+    } else {
+        filter = filters->list()[1].id();
+    }
+    _session->setActiveChatsFilter(filter);
 	_reorder->start();
 
 	_container->resizeToWidth(_outer.width());
